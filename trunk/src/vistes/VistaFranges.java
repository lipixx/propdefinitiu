/*
 * VistaFranges2.java
 *
 * Created on 29 / maig / 2008, 18:55
 */

package vistes;
import java.awt.event.ActionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author  lipi
 */
public class VistaFranges extends javax.swing.JPanel
{
    private String[][] llistaFranges;
    private String[] headFranges = {"HInici", "MInici", "HFi", "MFi", "Taxa"};
    private int numFranges = 0;
    
    /** Creates new form vistaFranges */
    public VistaFranges() 
    {
        initComponents();
        clearLlistaFranges();
    }


    public void setLlistaFranges() 
    {
        ((DefaultTableModel) (lsFranges.getModel())).setDataVector(llistaFranges, headFranges);
    }

    public void setSpinners()
    {
        spFranjaInici.setValue(0);
        spMinIni.setValue(0);
        spFranjaFi.setValue(23);
        spMinFi.setValue(59);
        
        spFranjaInici.setEnabled(false);
        spMinIni.setEnabled(false);
    }
    
    public void clearLlistaFranges()
    {
         llistaFranges = new String[24][4];
        
        lsFranges.setModel(new javax.swing.table.DefaultTableModel
                (llistaFranges,headFranges));
        numFranges = 0;
        setSpinners();
    }
    
    public void setLlistaFranges(String[][] inDatos)
    {
        llistaFranges = inDatos;
        ((DefaultTableModel) (lsFranges.getModel())).setDataVector(llistaFranges, headFranges);
    }

    public String[][] getListaFranges()
    {
        String resultat[][];
        int nfranges = 0;
        while (nfranges<24 && llistaFranges[nfranges][0] != null)
        {
            nfranges++;
        }
        
        resultat = new String[nfranges][5];
        
        for (int i = 0; i<nfranges; i++)
        {
            resultat[i][0] = llistaFranges[i][0];
            resultat[i][1] = llistaFranges[i][1];
            resultat[i][2] = llistaFranges[i][2];
            resultat[i][3] = llistaFranges[i][3];
            resultat[i][4] = llistaFranges[i][4];
        }
        numFranges = nfranges;
        return resultat;
    }
    

    void setActions(ActionListener actionListener) 
    {
        bGuarda.addActionListener(actionListener);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        spFranjaInici = new javax.swing.JSpinner();
        spFranjaFi = new javax.swing.JSpinner();
        spTaxa = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lsFranges = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        lsTaxes = new javax.swing.JTable();
        bGuarda = new javax.swing.JButton();
        bAddFranja = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        spMinIni = new javax.swing.JSpinner();
        spMinFi = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        spFranjaInici.setModel(new javax.swing.SpinnerNumberModel(0, 0, 23, 1));
        spFranjaInici.setEnabled(false);

        spFranjaFi.setModel(new javax.swing.SpinnerNumberModel(23, 0, 23, 1));

        spTaxa.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(0.0d), Double.valueOf(0.0d), null, Double.valueOf(1.0d)));

        jLabel1.setText("Hora d'inici:");

        jLabel2.setText("Hora de fi:   Minut fi:");

        jLabel3.setText("Taxa:");

        lsFranges.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "HInici", "MInici", "HFi", "MFi", "Taxa"
            }
        ));
        jScrollPane1.setViewportView(lsFranges);

        lsTaxes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"00:00 - 00:59", "0"},
                {"01:00 - 01:59", "0"},
                {"02:00 - 02:59", "0"},
                {"03:00 - 03:59", "0"},
                {"04:00 - 04:59", "0"},
                {"05:00 - 05:59", "0"},
                {"06:00 - 06:59", "0"},
                {"07:00 - 07:59", "0"},
                {"08:00 - 08:59", "0"},
                {"09:00 - 09:59", "0"},
                {"10:00 - 10:59", "0"},
                {"11:00 - 11:59", "0"},
                {"12:00 - 12:59", "0"},
                {"13:00 - 13:59", "0"},
                {"14:00 - 14:59", "0"},
                {"15:00 - 15:59", "0"},
                {"16:00 - 16:59", "0"},
                {"17:00 - 17:59", "0"},
                {"18:00 - 18:59", "0"},
                {"19:00 - 19:59", "0"},
                {"20:00 - 20:59", "0"},
                {"21:00 - 21:59", "0"},
                {"22:00 - 22:59", "0"},
                {"23:00 - 23:59", "0"}
            },
            new String [] {
                "Hora", "Taxa"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(lsTaxes);
        lsTaxes.getColumnModel().getColumn(0).setResizable(false);
        lsTaxes.getColumnModel().getColumn(1).setResizable(false);

        bGuarda.setText("Guardar");

        bAddFranja.setText("Afegir franja");
        bAddFranja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddFranjaActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("DejaVu Sans", 1, 13));
        jLabel4.setText("Parametres de la franja:");

        jLabel5.setText("Detall de les hores/taxa:");

        spMinIni.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));
        spMinIni.setEnabled(false);

        spMinFi.setModel(new javax.swing.SpinnerNumberModel(59, 0, 59, 1));

        jLabel6.setText("Minut inici:");

        jButton1.setText("Neteja");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(124, 124, 124)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(spTaxa)
                                        .addComponent(spFranjaInici)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(20, 20, 20)
                                            .addComponent(bAddFranja, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addGap(6, 6, 6)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(spMinIni, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel6))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel2)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(spFranjaFi, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(spMinFi, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jButton1)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(123, 123, 123)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                            .addComponent(jLabel5)
                            .addComponent(bGuarda, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE))))
                .addGap(78, 78, 78))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spFranjaInici, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(spMinIni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spMinFi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spFranjaFi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bAddFranja)
                            .addComponent(spTaxa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(bGuarda)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bAddFranjaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddFranjaActionPerformed
       
        //Nombre de franges que tenim actualment al vector de franges
       // numFranges = llistaFranges.length;
        if (numFranges == 0)
            llistaFranges = new String[24][5];
        
        boolean correcte = true;
        //Hores que ens acaben d'arribar
        int hInici = (Integer) (spFranjaInici.getValue());
        int minInici = (Integer) (spMinIni.getValue());
        int hFi = (Integer) (spFranjaFi.getValue());
        int minFi = (Integer)(spMinFi.getValue());
        
        //Taxa que ens acaba d'arribar i taxa de la ultima franja
        String taxa = ""+spTaxa.getValue();
        String lastTaxa;
        
        if(numFranges > 0)
        lastTaxa = llistaFranges[numFranges-1][4];
        else lastTaxa = "0";
        
        
        
        //Mirem la coherencia individual d'aquesta franja
        if (hInici == hFi)
        {
            if (minInici >= minFi) correcte = false;
        }
        else if (hInici > hFi) correcte = false;
        
        //Si es correcte mirem la coherencia amb la ultima franja
        //Si es que n'hi ha
        if (correcte)
        {
            if (numFranges != 0)
            {
                int hLastF = Integer.parseInt(llistaFranges[numFranges-1][2]);
                int mLastF = Integer.parseInt(llistaFranges[numFranges-1][3]);
                if (hInici == hLastF)
                {
                    if (minInici <= mLastF) correcte = false;
                }
                else if (hInici < hLastF) correcte = false;
            }
        }
        
        
        //Sabem que es coherent amb l'ultima franja, per tant nomes cal mirar
        //si s'ha de afegir a la franja o s'ha de crear una de nova
        if (correcte)
        {
            if (taxa.equals(lastTaxa) && numFranges!=0)
            {
                llistaFranges[numFranges-1][2] = String.valueOf(hFi);
                llistaFranges[numFranges-1][3] = String.valueOf(minFi);
                //Envia la llista a les vistes!
                setLlistaFranges(llistaFranges);
            }
            else{
                //Afegim nova franja a la matriu
            llistaFranges[numFranges][0] = String.valueOf(hInici);
            llistaFranges[numFranges][1] = String.valueOf(minInici);
            llistaFranges[numFranges][2] = String.valueOf(hFi);
            llistaFranges[numFranges][3] = String.valueOf(minFi);
            llistaFranges[numFranges][4] = String.valueOf(taxa);
            numFranges++;
            setLlistaFranges(llistaFranges);
            }
            
            //Set Spinners
            if (minFi == 59)
            {
                minFi=0;
                if (hFi == 23) hFi = 0;
                else hFi++;
                spFranjaInici.setValue(hFi);
                spMinIni.setValue(minFi);     
            }
            else
            {
            spFranjaInici.setValue(hFi);
            spMinIni.setValue(minFi+1); 
            }
        }
}//GEN-LAST:event_bAddFranjaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        clearLlistaFranges();
        spFranjaInici.setValue(0);
        spMinIni.setValue(0);
        spFranjaFi.setValue(23);
        spMinFi.setValue(59);
        spTaxa.setValue(0);
    }//GEN-LAST:event_jButton1ActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAddFranja;
    private javax.swing.JButton bGuarda;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable lsFranges;
    private javax.swing.JTable lsTaxes;
    private javax.swing.JSpinner spFranjaFi;
    private javax.swing.JSpinner spFranjaInici;
    private javax.swing.JSpinner spMinFi;
    private javax.swing.JSpinner spMinIni;
    private javax.swing.JSpinner spTaxa;
    // End of variables declaration//GEN-END:variables
    
}
